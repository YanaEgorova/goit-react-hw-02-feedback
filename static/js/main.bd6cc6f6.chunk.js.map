{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Section","children","title","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","onClick","Notification","message","OPTIONS","App","state","handleLeaveFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","countTotal","this","countPositive","Component","ReactDOM","render","document","getElementById"],"mappings":"qVAUeA,G,MAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACZ,6BAASC,UAAU,WACf,wBAAIA,UAAU,iBAAiBD,GAC9BD,K,MC0BMG,MA7Bf,YAMI,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,mBAEA,OAAS,oCAEL,uBACEN,UAAY,mBADd,UAEIE,EAFJ,KAFK,IAKG,uBACNF,UAAY,mBADN,aAEJG,EAFI,KALH,IAQG,uBACNH,UAAY,mBADN,SAEJI,EAFI,KARH,IAWG,uBACNJ,UAAY,mBADN,WAEJK,EAFI,KAXH,IAcG,uBACNL,UAAY,mBADN,uBAEJM,EAFI,KAdH,MCUEC,G,MAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,oCACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,4BACIX,UAAU,yBACVY,IAAKD,EACLE,KAAK,SACLC,QAAS,kBAAML,EAAgBE,KAE9BA,SCNNI,G,MAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,uBAAGhB,UAAU,qBAAqBgB,KCChCC,EAAU,CAAC,OAAQ,UAAW,OAEfC,E,2MACjBC,MAAQ,CACJjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTgB,oBAAsB,SAAAT,GAClB,EAAKU,UAAS,SAAAC,GACV,OAAO,eACFX,EAASW,EAAUX,GAAU,O,EAK1CY,mBAAqB,WAAO,IAAD,EACQ,EAAKJ,MAEpC,OAHuB,EACfjB,KADe,EACTC,QADS,EACAC,K,EAI3BoB,gCAAkC,WAAO,IAC7BtB,EAAS,EAAKiB,MAAdjB,KACFG,EAAQ,EAAKkB,qBAEnB,OADsBE,KAAKC,MAAc,IAAPxB,EAAcG,I,wEAKhD,IAAMsB,EAAaC,KAAKL,qBAClBM,EAAgBD,KAAKJ,kCAE3B,OACI,oCACI,kBAAC,EAAD,CAASzB,MAAM,yBACX,kBAAC,EAAD,CACIS,QAASS,EACTR,gBAAiBmB,KAAKR,sBACvB,KACI,IACX,kBAAC,EAAD,CAASrB,MAAM,cACV,IACA4B,EAAa,GACV,kBAAC,EAAD,CACIzB,KAAM0B,KAAKT,MAAMjB,KACjBC,QAASyB,KAAKT,MAAMhB,QACpBC,IAAKwB,KAAKT,MAAMf,IAChBC,MAAOsB,EACPrB,mBAAoBuB,IAG3BF,GAAc,GACX,kBAAC,EAAD,CAAcX,QAAQ,uBAEnB,S,GArDMc,aCHjCC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.bd6cc6f6.chunk.js","sourcesContent":["import React from 'react';\nimport './Section.css';\n\nconst Section = ({ children, title }) => (\n    <section className=\"Section\">\n        <h1 className=\"Section-title\">{title}</h1>\n        {children}\n    </section>\n);\n\nexport default Section;\n","import React from 'react';\nimport './Statistics.css';\n\nfunction Statistics({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage\n}) {\n    return ( <\n        >\n        <\n        p className = \"Statistics-text\" > Good: {\n            good\n        } < /p> <\n        p className = \"Statistics-text\" > Neutral: {\n            neutral\n        } < /p> <\n        p className = \"Statistics-text\" > Bad: {\n            bad\n        } < /p> <\n        p className = \"Statistics-text\" > Total: {\n            total\n        } < /p> <\n        p className = \"Statistics-text\" > Positive feedback: {\n            positivePercentage\n        } < /p> < /\n        >\n    );\n}\n\nexport default Statistics;","import React from 'react';\nimport './FeedbackOptions.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return (\n        <>\n            {options.map(option => (\n                <button\n                    className=\"FeedbackOptions-button\"\n                    key={option}\n                    type=\"button\"\n                    onClick={() => onLeaveFeedback(option)}\n                >\n                    {option}\n                </button>\n            ))}\n        </>\n    );\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport './Notification.css';\n\nconst Notification = ({ message }) => (\n    <p className=\"Notification-text\">{message}</p>\n);\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Notification from './Notification';\nconst OPTIONS = ['good', 'neutral', 'bad'];\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    handleLeaveFeedback = option => {\n        this.setState(prevState => {\n            return {\n                [option]: prevState[option] + 1,\n            };\n        });\n    };\n\n    countTotalFeedback = () => {\n        const { good, neutral, bad } = this.state;\n        const total = good + neutral + bad;\n        return total;\n    };\n    countPositiveFeedbackPercentage = () => {\n        const { good } = this.state;\n        const total = this.countTotalFeedback();\n        const countPositive = Math.round((good * 100) / total);\n        return countPositive;\n    };\n\n    render() {\n        const countTotal = this.countTotalFeedback();\n        const countPositive = this.countPositiveFeedbackPercentage();\n\n        return (\n            <>\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={OPTIONS}\n                        onLeaveFeedback={this.handleLeaveFeedback}\n                    />{' '}\n                </Section>{' '}\n                <Section title=\"Statistics\">\n                    {' '}\n                    {countTotal > 0 && (\n                        <Statistics\n                            good={this.state.good}\n                            neutral={this.state.neutral}\n                            bad={this.state.bad}\n                            total={countTotal}\n                            positivePercentage={countPositive}\n                        />\n                    )}\n                    {countTotal <= 0 && (\n                        <Notification message=\"No feedback given\" />\n                    )}\n                </Section>{' '}\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}